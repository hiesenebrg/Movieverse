// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid()) @map("_id")
  email String @unique
  name  String

  admin     Boolean  @default(false)
  avatar    String?
  timestamp DateTime @default(now())

  movies MovieToVideo[]
  // videos           Video[]  @relation("VideoCreator")
  // favouriteVideos  Video[]  @relation("FavouriteVideos")
  // favouriteCourses Course[] @relation("FavouriteCourses")
}

model Movie {
  id        String         @id @default(uuid()) @map("_id")
  movieID   String         @unique
  type      String         @default("movie") // "movie" or "series"
  movieLink String?        // For movies
  seasons   Season[]       // For series
  favorites MovieToVideo[]
  timestamp DateTime       @default(now())
}

model Season {
  id      String @id @default(uuid()) @map("_id")
  number  Int
  link    String
  movieId String
  movie   Movie  @relation(fields: [movieId], references: [id])

  @@unique([movieId, number])
}

model MovieToVideo {
  id      String @id @default(uuid()) @map("_id")
  MovieId String
  userId  String

  movie Movie @relation(fields: [MovieId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([MovieId, userId])
}
